// Description:
//   Example scripts for you to examine and try out.
//
// Notes:
//   They are commented out by default, because most of them are pretty silly and
//   wouldn't be useful and amusing enough for day to day huboting.
//   Uncomment the ones you want to try and experiment with.
//
//   These are from the scripting documentation: https://github.com/github/hubot/blob/master/docs/scripting.md

// Generated by CoffeeScript 1.6.3
(function() {
  module.exports = function(robot) {
    var botname, minusminus_re, plusplus_minusminus_re, plusplus_re;
    botname = process.env.HUBOT_SLACK_BOTNAME;
    plusplus_re = /@([a-z0-9_\-\.]+)\s?\+{2,}/ig;
    minusminus_re = /@([a-z0-9_\-\.]+)\s?\-{2,}/ig;
    plusplus_minusminus_re = /@([a-z0-9_\-\.]+)\s?[\+\-]{2,}/ig;
    robot.hear(plusplus_minusminus_re, function(msg) {
      var count, match, res, sending_user, user;
      sending_user = msg.message.user.name;
      res = '';
      while ((match = plusplus_re.exec(msg.message))) {
        user = match[1].replace(/\-+$/g, '');
        if (user !== sending_user) {
          count = (robot.brain.get(user) || 0) + 1;
          robot.brain.set(user, count);
          res += "@" + user + "+1 [now at " + count + "]\n";
        } else if (process.env.KARMABOT_NO_GIF) {
          res += process.env.KARMABOT_NO_GIF;
        }
      }
      while ((match = minusminus_re.exec(msg.message))) {
        user = match[1].replace(/\-+$/g, '');
        count = (robot.brain.get(user) || 0) - 1;
        robot.brain.set(user, count);
        res += "@" + user + "-1 [now at " + count + "]\n";
      }
      return msg.send(res.replace(/\s+$/g, ''));
    });
    robot.hear(RegExp("" + botname + "\\s+@([a-z0-9_\\-\\.]+)", "i"), function(msg) {
      var count, point_label, user;
      user = msg.match[1].replace(/\-+$/g, '');
      count = robot.brain.get(user);
      if (count !== null) {
        point_label = count === 1 ? "point" : "points";
        return msg.send(("@" + user + ": " + count + " ") + point_label);
      } else {
        return msg.send("@" + user + " has no karma");
      }
    });
    return robot.hear(RegExp("" + botname + "\\s+leaderboard", "i"), function(msg) {
      var i, leader, limit, newline, point_label, points, score, str, tuples, username, users, _i, _ref;
      users = robot.brain.data._private;
      tuples = [];
      for (username in users) {
        score = users[username];
        tuples.push([username, score]);
      }
      if (tuples.length === 0) {
        msg.send("The lack of karma is too damn high!");
        return;
      }
      tuples.sort(function(a, b) {
        if (a[1] > b[1]) {
          return -1;
        } else if (a[1] < b[1]) {
          return 1;
        } else {
          return 0;
        }
      });
      str = '';
      limit = 5;
      for (i = _i = 0, _ref = Math.min(limit, tuples.length); 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {
        username = tuples[i][0];
        points = tuples[i][1];
        point_label = points === 1 ? "point" : "points";
        leader = i === 0 ? "All hail supreme leader!" : "";
        newline = i < Math.min(limit, tuples.length) - 1 ? '\n' : '';
        str += ("#" + (i + 1) + " @" + username + " [" + points + " ") + point_label + "] " + leader + newline;
      }
      return msg.send(str);
    });
  };

}).call(this);
